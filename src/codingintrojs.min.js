/*

▒█▀▀█ █▀▀█ █▀▀▄ ░▀░ █▀▀▄ █▀▀▀ ▀█▀ █▀▀▄ ▀▀█▀▀ █▀▀█ █▀▀█ ░░░▒█ ▒█▀▀▀█ 　 ░░ 　 ▒█▀▀▀█ █▀▀ █▀▀▄ ░▀░ ▀▀█▀▀ █░░█ 
▒█░░░ █░░█ █░░█ ▀█▀ █░░█ █░▀█ ▒█░ █░░█ ░░█░░ █▄▄▀ █░░█ ░▄░▒█ ░▀▀▀▄▄ 　 ▀▀ 　 ░▄▄▄▀▀ █▀▀ █░░█ ▀█▀ ░░█░░ █▀▀█ 
▒█▄▄█ ▀▀▀▀ ▀▀▀░ ▀▀▀ ▀░░▀ ▀▀▀▀ ▄█▄ ▀░░▀ ░░▀░░ ▀░▀▀ ▀▀▀▀ ▒█▄▄█ ▒█▄▄▄█ 　 ░░ 　 ▒█▄▄▄█ ▀▀▀ ▀░░▀ ▀▀▀ ░░▀░░ ▀░░▀

- Version: 7.2.0 
- Author: Coding Team
*/

class CodingIntroJS{constructor(steps,options={}){this.steps=steps;this.currentStep=-1;const defaultLabels={prev:'Previous',next:'Next',finish:'Finish',of:'of',welcomeTitle:'Welcome!',welcomeContent:'Ready to take a tour?',welcomeButton:'Let\'s Go!'};const defaultIcons={prev:'◀️',next:'▶️',finish:'✅'};const defaultOptions={animationSpeed:150,animationEasing:'ease-out',backdropColor:"rgba(15, 22, 36, 0.9)",highlightPadding:8,allowClose:true,keyboardNavigation:true,scrollPadding:40,safeAreaPadding:10,defaultTheme:'dark',labels:defaultLabels,icons:defaultIcons,.onStart:null,onFinish:null,onExit:null,onBeforeStep:null,onAfterStep:null};this.options={...defaultOptions,...options,labels:{...defaultOptions.labels,...(options.labels||{})},icons:{...defaultOptions.icons,...(options.icons||{})}};this.isActive=false;this.elements={container:null,overlay:null,highlighter:null,tooltip:null};this.eventHandlers={};this.originalElement=null;this.previousStepClassName='';this.tooltipDimensions={width:0,height:0};}
start(){if(this.isActive){console.error("CodingIntroJS is already running. Cannot start it twice 🧐");return this;}
this.isActive=true;this.createDOMElements();this.measureTooltipDimensions();this.setupEventListeners();document.body.classList.add('coding-intro-v7-active');this.elements.container.classList.add('visible');if(typeof this.options.onStart==="function")this.options.onStart();this.goTo(0);return this;}
goTo(stepIndex){if(!this.isActive){console.warn("CodingIntroJS is not active, cannot navigate to a step.");return;}
this.processStep(stepIndex);}
setTheme(themeName){if(this.elements.container){this.elements.container.dataset.theme=themeName;this.options.defaultTheme=themeName;}else{console.warn("%c[⚠️ CodingIntroJS]%c You cannot set the theme before the tour starts.\n%c→ Set it in the constructor options instead: %cnew CodingIntroJS(steps, { defaultTheme: 'dark' });","color: #e91e63; font-weight: bold; font-size: 13px;","color: #fff; font-weight: normal;","color: #90caf9; font-style: italic;","color: #a5d6a7; font-family: monospace;");}}
getCurrentStep(){if(this.currentStep<0||this.currentStep>=this.steps.length)return null;return this.steps[this.currentStep];}
createDOMElements(){this.elements.container=document.createElement("div");this.elements.container.className="coding-intro-v7-container";this.elements.container.dataset.theme=this.options.defaultTheme;this.elements.overlay=document.createElement("div");this.elements.overlay.className="coding-intro-v7-overlay";this.elements.highlighter=document.createElement("div");this.elements.highlighter.className="coding-intro-v7-highlighter";this.elements.tooltip=document.createElement("div");this.elements.tooltip.className="coding-intro-v7-tooltip";this.elements.tooltip.setAttribute('role','dialog');this.elements.tooltip.setAttribute('aria-modal','true');this.elements.container.append(this.elements.overlay,this.elements.highlighter,this.elements.tooltip);document.body.appendChild(this.elements.container);this.injectStyles();}
measureTooltipDimensions(){const tooltip=this.elements.tooltip;const originalContent=tooltip.innerHTML;if(!originalContent.trim()){tooltip.innerHTML=`
                <div class="ci-tooltip-header">Test Title</div>
                <div class="ci-tooltip-content">Test content for measuring size</div>
                <div class="ci-tooltip-footer">
                    <div class="ci-progress">1 ${this.options.labels.of} 1</div>
                    <div class="ci-nav-buttons">
                        <button class="ci-button ci-prev" disabled>${this.options.icons.prev} ${this.options.labels.prev}</button>
                        <button class="ci-button ci-next">${this.options.icons.next} ${this.options.labels.next}</button>
                    </div>
                </div>`;}
tooltip.style.visibility='hidden';tooltip.style.position='absolute';tooltip.style.top='-9999px';tooltip.style.left='-9999px';tooltip.style.opacity='1';tooltip.classList.add('visible');const rect=tooltip.getBoundingClientRect();this.tooltipDimensions={width:rect.width,height:rect.height};tooltip.style.visibility='';tooltip.style.position='';tooltip.style.top='';tooltip.style.left='';tooltip.style.opacity='';tooltip.classList.remove('visible');tooltip.innerHTML=originalContent;}
injectStyles(){if(document.getElementById("coding-intro-styles-v7"))return;const styleElement=document.createElement("style");styleElement.id="coding-intro-styles-v7";const o=this.options;styleElement.textContent=`
            .coding-intro-v7-container{--ci-anim-speed:${o.animationSpeed}ms;--ci-anim-ease:${o.animationEasing};--ci-safe-area:${o.safeAreaPadding}px;--ci-aura-rgb:80,220,255;--ci-tooltip-bg:#222c3f;--ci-tooltip-title:#ffffff;--ci-tooltip-content:rgba(255,255,255,0.9);--ci-tooltip-border:rgba(255,255,255,0.15);--ci-tooltip-shadow:rgba(0,0,0,0.4);--ci-button-bg:rgba(255,255,255,0.1);--ci-button-hover-bg:rgba(255,255,255,0.2);--ci-button-text:#fff;--ci-progress-color:rgba(255,255,255,0.6);--ci-welcome-button-bg-rgb:var(--ci-aura-rgb);--ci-welcome-button-text:#000}.coding-intro-v7-container[data-theme="light"]{--ci-aura-rgb:0,122,255;--ci-tooltip-bg:#ffffff;--ci-tooltip-title:#000000;--ci-tooltip-content:rgba(0,0,0,0.85);--ci-tooltip-border:rgba(0,0,0,0.15);--ci-tooltip-shadow:rgba(60,60,60,0.2);--ci-button-bg:rgba(0,0,0,0.08);--ci-button-hover-bg:rgba(0,0,0,0.15);--ci-button-text:#000;--ci-progress-color:rgba(0,0,0,0.5);--ci-welcome-button-text:#fff}body.coding-intro-v7-active{overflow:hidden}.coding-intro-v7-container{position:fixed;top:0;left:0;width:100%;height:100%;z-index:99998;pointer-events:none;opacity:0;transition:opacity var(--ci-anim-speed) ease-in-out}.coding-intro-v7-container.visible{opacity:1}.coding-intro-v7-overlay{position:absolute;top:0;left:0;width:100%;height:100%;background-color:${o.backdropColor};pointer-events:all;opacity:0;transition:opacity var(--ci-anim-speed) var(--ci-anim-ease)}.coding-intro-v7-overlay.visible{opacity:1}.coding-intro-v7-highlighter{position:absolute;pointer-events:none;border-radius:8px;box-shadow:0 0 0 3px rgba(var(--ci-aura-rgb),0.7),0 0 0 9999px ${o.backdropColor};transition:all var(--ci-anim-speed) var(--ci-anim-ease);opacity:0}.coding-intro-v7-highlighter.visible{opacity:1}.coding-intro-v7-tooltip{position:absolute;z-index:1;border-radius:12px;padding:clamp(0.8rem,3vw,1.2rem);max-width:min(380px,calc(100vw - (var(--ci-safe-area) * 2)));width:100%;pointer-events:all;opacity:0;transform:none;transition:all var(--ci-anim-speed) var(--ci-anim-ease);border:1px solid var(--ci-tooltip-border);box-shadow:0 5px 15px var(--ci-tooltip-shadow);background-color:var(--ci-tooltip-bg);color:var(--ci-tooltip-content);font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Helvetica,Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol"}.coding-intro-v7-tooltip.visible{opacity:1;transform:none}.coding-intro-v7-tooltip.is-welcome{top:50%;left:50%;width:calc(100% - (var(--ci-safe-area) * 2));transform:translate(-50%,-50%);max-width:450px;text-align:center;padding:clamp(1rem,4vw,2rem)}.coding-intro-v7-tooltip.is-welcome.visible{transform:translate(-50%,-50%)}.ci-welcome-image{max-width:100px;height:auto;margin:0 auto 1rem;border-radius:8px}.ci-welcome-button{display:inline-flex;align-items:center;justify-content:center;gap:0.5em;padding:12px 28px;margin-top:1rem;background-color:rgba(var(--ci-welcome-button-bg-rgb),0.9);color:var(--ci-welcome-button-text);border:none;border-radius:40px;font-weight:600;cursor:pointer;font-size:1rem;transition:all 0.15s ease}.ci-welcome-button:hover{transform:translateY(-2px);box-shadow:0 2px 10px rgba(var(--ci-welcome-button-bg-rgb),0.3)}.ci-tooltip-header{font-size:clamp(1.1rem,4vw,1.3rem);font-weight:600;color:var(--ci-tooltip-title);margin-bottom:0.6rem}.ci-tooltip-content{font-size:clamp(0.85rem,3.5vw,0.95rem);line-height:1.5;margin-bottom:1rem}.ci-tooltip-footer{display:flex;justify-content:space-between;align-items:center;padding-top:0.8rem;border-top:1px solid var(--ci-tooltip-border);margin-top:1rem}.ci-progress{font-size:0.85rem;color:var(--ci-progress-color)}.ci-nav-buttons{display:flex;gap:0.4rem}.ci-button{min-width:40px;height:38px;border-radius:6px;border:none;background:var(--ci-button-bg);color:var(--ci-button-text);cursor:pointer;transition:all 0.15s ease;display:inline-flex;align-items:center;justify-content:center;padding:0 14px;font-size:0.9rem;font-weight:500;gap:0.4em;white-space:nowrap}.ci-button span{font-size:1.1em;line-height:1}.ci-button:hover:not(:disabled){background:var(--ci-button-hover-bg);transform:translateY(-1px);box-shadow:0 1px 5px rgba(0,0,0,0.1)}.ci-button:disabled{opacity:0.5;cursor:not-allowed;transform:none;box-shadow:none}
        `;document.head.appendChild(styleElement);}
setupEventListeners(){let resizeTimeout;this.eventHandlers.resize=()=>{clearTimeout(resizeTimeout);resizeTimeout=setTimeout(()=>{if(this.isActive){this.measureTooltipDimensions();this.updatePositions();}},100);};window.addEventListener("resize",this.eventHandlers.resize);let scrollTimeout;this.eventHandlers.scroll=()=>{clearTimeout(scrollTimeout);scrollTimeout=setTimeout(()=>{if(this.isActive&&!this.steps[this.currentStep]?.isWelcome){this.updatePositions();}},50);};window.addEventListener("scroll",this.eventHandlers.scroll,true);if(this.options.keyboardNavigation){this.eventHandlers.keydown=(e)=>{if(!this.isActive||e.target.isContentEditable||['INPUT','TEXTAREA','SELECT'].includes(e.target.tagName)){return;}
if(e.key==='ArrowRight'||e.key==='Enter'){e.preventDefault();this.next();}
if(e.key==='ArrowLeft'){e.preventDefault();this.prev();}
if(e.key==='Escape'&&this.options.allowClose){e.preventDefault();this.exit();}};document.addEventListener("keydown",this.eventHandlers.keydown);}
this.elements.tooltip.addEventListener("click",(e)=>{const target=e.target.closest('button');if(!target)return;if(target.classList.contains("ci-next"))this.next();if(target.classList.contains("ci-prev"))this.prev();});}
async processStep(stepIndex){if(!this.isActive||stepIndex<0||stepIndex>=this.steps.length){return this.finish();}
const step=this.steps[stepIndex];if(typeof this.options.onBeforeStep==='function'){await this.options.onBeforeStep(stepIndex,step);}
this.elements.tooltip.classList.remove('visible');this.elements.highlighter.classList.remove('visible');await new Promise(r=>setTimeout(r,this.options.animationSpeed/5));if(this.previousStepClassName)this.elements.tooltip.classList.remove(this.previousStepClassName);this.currentStep=stepIndex;if(step.isWelcome){await this.showWelcomeStep(step);}else{const targetElement=document.querySelector(step.selector);if(!targetElement||(typeof step.condition==='function'&&!step.condition(targetElement))){console.warn(`%c[⚠️ CodingIntroJS]%c Step ${stepIndex} skipped — target %c"${step.selector}"%c is a ghost 👻 (missing or condition not met).`,"color: #e91e63; font-weight: bold;","color: #fff;","color: #ffeb3b; font-weight: bold;","color: #fff;");return this.processStep(stepIndex+1);}
await this.showSelectorStep(step,targetElement);}
if(typeof this.options.onAfterStep==='function'){this.options.onAfterStep(this.currentStep,step,this.originalElement);}}
async showWelcomeStep(step){this.originalElement=null;this.elements.overlay.classList.add('visible');const welcomeTitle=step.title||this.options.labels.welcomeTitle;const welcomeContent=step.content||this.options.labels.welcomeContent;const welcomeButtonText=step.welcomeButtonText||this.options.labels.welcomeButton;const welcomeButtonIcon=step.welcomeButtonIcon||this.options.icons.next;this.elements.tooltip.innerHTML=`
            ${step.welcomeImage ? `<img src="${step.welcomeImage}"class="ci-welcome-image"alt="Welcome">` : ''}
            <div class="ci-tooltip-header">${welcomeTitle}</div>
            <div class="ci-tooltip-content">${welcomeContent}</div>
            <button class="ci-welcome-button ci-next">
                ${welcomeButtonIcon ? `<span>${welcomeButtonIcon}</span>` : ''}
                ${welcomeButtonText}
            </button>
        `;this.elements.tooltip.classList.add('is-welcome');if(step.className)this.elements.tooltip.classList.add(step.className);this.previousStepClassName=step.className||'';this.elements.tooltip.classList.add('visible');}
async showSelectorStep(step,targetElement){this.originalElement=targetElement;this.originalElement.scrollIntoView({behavior:'smooth',block:'center',inline:'nearest'});await new Promise(resolve=>{let lastScrollY=window.scrollY;let consecutiveChecks=0;const checkScroll=()=>{if(!this.isActive){resolve();return;}
const currentScrollY=window.scrollY;if(Math.abs(currentScrollY-lastScrollY)<2){consecutiveChecks++;}else{consecutiveChecks=0;}
lastScrollY=currentScrollY;if(consecutiveChecks>3)resolve();else requestAnimationFrame(checkScroll);};requestAnimationFrame(checkScroll);});this.elements.overlay.classList.remove('visible');this.updateTooltipContent(step);if(step.className)this.elements.tooltip.classList.add(step.className);this.previousStepClassName=step.className||'';this.updatePositions();this.elements.tooltip.classList.add('visible');}
getRectForSelector(selector){const element=document.querySelector(selector);if(element){return element.getBoundingClientRect();}
return null;}
updatePositions(){if(!this.originalElement||this.steps[this.currentStep]?.isWelcome){this.elements.highlighter.classList.remove('visible');return;}
const rect=this.getRectForSelector(this.steps[this.currentStep].selector);if(!rect){this.elements.highlighter.classList.remove('visible');return;}
const highlighter=this.elements.highlighter;const p=this.options.highlightPadding;highlighter.style.top=`${rect.top - p}px`;highlighter.style.left=`${rect.left - p}px`;highlighter.style.width=`${rect.width + 2 * p}px`;highlighter.style.height=`${rect.height + 2 * p}px`;const step=this.steps[this.currentStep];const br=step.highlightBorderRadius??window.getComputedStyle(this.originalElement).borderRadius;highlighter.style.borderRadius=`calc(${br} + ${p}px)`;highlighter.classList.add('visible');this.positionTooltip(rect);}
updateTooltipContent(step){const title=typeof step.title==='function'?step.title(this.originalElement):step.title;const content=typeof step.content==='function'?step.content(this.originalElement):step.content;const isLast=this.currentStep===this.steps.length-1;const isFirst=this.currentStep===0;const prevButtonText=this.options.labels.prev;const nextButtonText=isLast?this.options.labels.finish:this.options.labels.next;const prevButtonIcon=this.options.icons.prev;const nextButtonIcon=isLast?this.options.icons.finish:this.options.icons.next;this.elements.tooltip.innerHTML=`
            ${title ? `<div class="ci-tooltip-header">${title}</div>` : ""}
            <div class="ci-tooltip-content">${content || ""}</div>
            <div class="ci-tooltip-footer">
                <div class="ci-progress">${this.currentStep + 1} ${this.options.labels.of} ${this.steps.length}</div>
                <div class="ci-nav-buttons">
                    <button class="ci-button ci-prev" title="${prevButtonText}" ${isFirst ? "disabled" : ""}>
                        ${prevButtonIcon ? `<span>${prevButtonIcon}</span>` : ''}
                        ${prevButtonText}
                    </button>
                    <button class="ci-button ci-next" title="${nextButtonText}">
                        ${nextButtonIcon ? `<span>${nextButtonIcon}</span>` : ''}
                        ${nextButtonText}
                    </button>
                </div>
            </div>`;this.elements.tooltip.classList.remove('is-welcome');}
positionTooltip(targetRect){const tooltip=this.elements.tooltip;const tooltipWidth=this.tooltipDimensions.width;const tooltipHeight=this.tooltipDimensions.height;const safe=this.options.safeAreaPadding;const vpW=window.innerWidth;const vpH=window.innerHeight;const gap=12;const positions=[{name:'bottom',top:targetRect.bottom+gap,left:targetRect.left+targetRect.width/2-tooltipWidth/2,score:vpH-(targetRect.bottom+gap+tooltipHeight)},{name:'top',top:targetRect.top-tooltipHeight-gap,left:targetRect.left+targetRect.width/2-tooltipWidth/2,score:targetRect.top-tooltipHeight-gap},{name:'right',top:targetRect.top+targetRect.height/2-tooltipHeight/2,left:targetRect.right+gap,score:vpW-(targetRect.right+gap+tooltipWidth)},{name:'left',top:targetRect.top+targetRect.height/2-tooltipHeight/2,left:targetRect.left-tooltipWidth-gap,score:targetRect.left-tooltipWidth-gap}];let bestPosition=null;let maxScore=-Infinity;for(const pos of positions){const currentTooltipRect={top:pos.top,left:pos.left,right:pos.left+tooltipWidth,bottom:pos.top+tooltipHeight};const overlapsTarget=!(currentTooltipRect.right<targetRect.left||currentTooltipRect.left>targetRect.right||currentTooltipRect.bottom<targetRect.top||currentTooltipRect.top>targetRect.bottom);const fitsX=(pos.left>=safe)&&(pos.left+tooltipWidth<=vpW-safe);const fitsY=(pos.top>=safe)&&(pos.top+tooltipHeight<=vpH-safe);if(fitsX&&fitsY&&!overlapsTarget){const currentScore=pos.score;if(currentScore>maxScore){maxScore=currentScore;bestPosition=pos;}}}
if(!bestPosition){let maxAvailableSpace=-Infinity;let fallbackPosition=null;for(const pos of positions){const space=pos.score;if(space>maxAvailableSpace){maxAvailableSpace=space;fallbackPosition=pos;}}
bestPosition=fallbackPosition||positions[0];}
let{top,left}=bestPosition;left=Math.max(safe,Math.min(left,vpW-tooltipWidth-safe));top=Math.max(safe,Math.min(top,vpH-tooltipHeight-safe));tooltip.style.top=`${top}px`;tooltip.style.left=`${left}px`;}
next(){this.goTo(this.currentStep+1);}
prev(){this.goTo(this.currentStep-1);}
exit(){if(!this.isActive)return;this.isActive=false;this.elements.container.classList.remove('visible');document.body.classList.remove('coding-intro-v7-active');setTimeout(()=>{if(this.elements.container)this.elements.container.remove();const styleSheet=document.getElementById("coding-intro-styles-v7");if(styleSheet)styleSheet.remove();window.removeEventListener("resize",this.eventHandlers.resize);window.removeEventListener("scroll",this.eventHandlers.scroll,true);if(this.eventHandlers.keydown)document.removeEventListener("keydown",this.eventHandlers.keydown);},this.options.animationSpeed);if(typeof this.options.onExit==="function")this.options.onExit();}
finish(){if(!this.isActive)return;if(typeof this.options.onFinish==="function")this.options.onFinish();this.exit();}}
if(typeof window!=='undefined'){window.CodingIntroJS=CodingIntroJS;}