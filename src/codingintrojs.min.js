/*

‚ñí‚ñà‚ñÄ‚ñÄ‚ñà ‚ñà‚ñÄ‚ñÄ‚ñà ‚ñà‚ñÄ‚ñÄ‚ñÑ ‚ñë‚ñÄ‚ñë ‚ñà‚ñÄ‚ñÄ‚ñÑ ‚ñà‚ñÄ‚ñÄ‚ñÄ ‚ñÄ‚ñà‚ñÄ ‚ñà‚ñÄ‚ñÄ‚ñÑ ‚ñÄ‚ñÄ‚ñà‚ñÄ‚ñÄ ‚ñà‚ñÄ‚ñÄ‚ñà ‚ñà‚ñÄ‚ñÄ‚ñà ‚ñë‚ñë‚ñë‚ñí‚ñà ‚ñí‚ñà‚ñÄ‚ñÄ‚ñÄ‚ñà „ÄÄ ‚ñë‚ñë „ÄÄ ‚ñí‚ñà‚ñÄ‚ñÄ‚ñÄ‚ñà ‚ñà‚ñÄ‚ñÄ ‚ñà‚ñÄ‚ñÄ‚ñÑ ‚ñë‚ñÄ‚ñë ‚ñÄ‚ñÄ‚ñà‚ñÄ‚ñÄ ‚ñà‚ñë‚ñë‚ñà 
‚ñí‚ñà‚ñë‚ñë‚ñë ‚ñà‚ñë‚ñë‚ñà ‚ñà‚ñë‚ñë‚ñà ‚ñÄ‚ñà‚ñÄ ‚ñà‚ñë‚ñë‚ñà ‚ñà‚ñë‚ñÄ‚ñà ‚ñí‚ñà‚ñë ‚ñà‚ñë‚ñë‚ñà ‚ñë‚ñë‚ñà‚ñë‚ñë ‚ñà‚ñÑ‚ñÑ‚ñÄ ‚ñà‚ñë‚ñë‚ñà ‚ñë‚ñÑ‚ñë‚ñí‚ñà ‚ñë‚ñÄ‚ñÄ‚ñÄ‚ñÑ‚ñÑ „ÄÄ ‚ñÄ‚ñÄ „ÄÄ ‚ñë‚ñÑ‚ñÑ‚ñÑ‚ñÄ‚ñÄ ‚ñà‚ñÄ‚ñÄ ‚ñà‚ñë‚ñë‚ñà ‚ñÄ‚ñà‚ñÄ ‚ñë‚ñë‚ñà‚ñë‚ñë ‚ñà‚ñÄ‚ñÄ‚ñà 
‚ñí‚ñà‚ñÑ‚ñÑ‚ñà ‚ñÄ‚ñÄ‚ñÄ‚ñÄ ‚ñÄ‚ñÄ‚ñÄ‚ñë ‚ñÄ‚ñÄ‚ñÄ ‚ñÄ‚ñë‚ñë‚ñÄ ‚ñÄ‚ñÄ‚ñÄ‚ñÄ ‚ñÑ‚ñà‚ñÑ ‚ñÄ‚ñë‚ñë‚ñÄ ‚ñë‚ñë‚ñÄ‚ñë‚ñë ‚ñÄ‚ñë‚ñÄ‚ñÄ ‚ñÄ‚ñÄ‚ñÄ‚ñÄ ‚ñí‚ñà‚ñÑ‚ñÑ‚ñà ‚ñí‚ñà‚ñÑ‚ñÑ‚ñÑ‚ñà „ÄÄ ‚ñë‚ñë „ÄÄ ‚ñí‚ñà‚ñÑ‚ñÑ‚ñÑ‚ñà ‚ñÄ‚ñÄ‚ñÄ ‚ñÄ‚ñë‚ñë‚ñÄ ‚ñÄ‚ñÄ‚ñÄ ‚ñë‚ñë‚ñÄ‚ñë‚ñë ‚ñÄ‚ñë‚ñë‚ñÄ

- Version: 7.2.0 
- Build: ZenithEDITION@7A
- Author: Coding Team
*/

class CodingIntroJS{constructor(t,e={}){this.steps=t,this.currentStep=-1;const i={animationSpeed:150,animationEasing:"ease-out",backdropColor:"rgba(15, 22, 36, 0.9)",highlightPadding:8,allowClose:!0,keyboardNavigation:!0,scrollPadding:40,safeAreaPadding:10,defaultTheme:"dark",labels:{prev:"Previous",next:"Next",finish:"Finish",of:"of",welcomeTitle:"Welcome!",welcomeContent:"Ready to take a tour?",welcomeButton:"Let's Go!"},icons:{prev:"‚óÄÔ∏è",next:"‚ñ∂Ô∏è",finish:"‚úÖ"},onStart:null,onFinish:null,onExit:null,onBeforeStep:null,onAfterStep:null};this.options={...i,...e,labels:{...i.labels,...e.labels||{}},icons:{...i.icons,...e.icons||{}}},this.isActive=!1,this.elements={container:null,overlay:null,highlighter:null,tooltip:null},this.eventHandlers={},this.originalElement=null,this.previousStepClassName="",this.tooltipDimensions={width:0,height:0}}start(){return this.isActive?(console.error("CodingIntroJS is already running. Cannot start it twice üßê"),this):(this.isActive=!0,this.createDOMElements(),this.measureTooltipDimensions(),this.setupEventListeners(),document.body.classList.add("coding-intro-v7-active"),this.elements.container.classList.add("visible"),"function"==typeof this.options.onStart&&this.options.onStart(),this.goTo(0),this)}goTo(t){this.isActive?this.processStep(t):console.warn("CodingIntroJS is not active, cannot navigate to a step.")}setTheme(t){this.elements.container?(this.elements.container.dataset.theme=t,this.options.defaultTheme=t):console.warn("%c[‚ö†Ô∏è CodingIntroJS]%c You cannot set the theme before the tour starts.\n%c‚Üí Set it in the constructor options instead: %cnew CodingIntroJS(steps, { defaultTheme: 'dark' });","color: #e91e63; font-weight: bold; font-size: 13px;","color: #fff; font-weight: normal;","color: #90caf9; font-style: italic;","color: #a5d6a7; font-family: monospace;")}getCurrentStep(){return this.currentStep<0||this.currentStep>=this.steps.length?null:this.steps[this.currentStep]}createDOMElements(){this.elements.container=document.createElement("div"),this.elements.container.className="coding-intro-v7-container",this.elements.container.dataset.theme=this.options.defaultTheme,this.elements.overlay=document.createElement("div"),this.elements.overlay.className="coding-intro-v7-overlay",this.elements.highlighter=document.createElement("div"),this.elements.highlighter.className="coding-intro-v7-highlighter",this.elements.tooltip=document.createElement("div"),this.elements.tooltip.className="coding-intro-v7-tooltip",this.elements.tooltip.setAttribute("role","dialog"),this.elements.tooltip.setAttribute("aria-modal","true"),this.elements.container.append(this.elements.overlay,this.elements.highlighter,this.elements.tooltip),document.body.appendChild(this.elements.container),this.injectStyles()}measureTooltipDimensions(){const t=this.elements.tooltip,e=t.innerHTML;e.trim()||(t.innerHTML=`\n                <div class="ci-tooltip-header">Test Title</div>\n                <div class="ci-tooltip-content">Test content for measuring size</div>\n                <div class="ci-tooltip-footer">\n                    <div class="ci-progress">1 ${this.options.labels.of} 1</div>\n                    <div class="ci-nav-buttons">\n                        <button class="ci-button ci-prev" disabled>${this.options.icons.prev} ${this.options.labels.prev}</button>\n                        <button class="ci-button ci-next">${this.options.icons.next} ${this.options.labels.next}</button>\n                    </div>\n                </div>`),t.style.visibility="hidden",t.style.position="absolute",t.style.top="-9999px",t.style.left="-9999px",t.style.opacity="1",t.classList.add("visible");const i=t.getBoundingClientRect();this.tooltipDimensions={width:i.width,height:i.height},t.style.visibility="",t.style.position="",t.style.top="",t.style.left="",t.style.opacity="",t.classList.remove("visible"),t.innerHTML=e}injectStyles(){if(document.getElementById("coding-intro-styles-v7"))return;const t=document.createElement("style");t.id="coding-intro-styles-v7";const e=this.options;t.textContent=`\n            .coding-intro-v7-container {\n                --ci-anim-speed: ${e.animationSpeed}ms;\n                --ci-anim-ease: ${e.animationEasing};\n                --ci-safe-area: ${e.safeAreaPadding}px;\n                \n                /* --- DARK THEME (DEFAULT) --- */\n                --ci-aura-rgb: 80, 220, 255; /* Highlight aura color */\n                --ci-tooltip-bg: #222c3f; /* Tooltip background */\n                --ci-tooltip-title: #ffffff; /* Tooltip title color */\n                --ci-tooltip-content: rgba(255, 255, 255, 0.9); /* Tooltip content color */\n                --ci-tooltip-border: rgba(255, 255, 255, 0.15); /* Subtle tooltip border */\n                --ci-tooltip-shadow: rgba(0, 0, 0, 0.4); /* Tooltip shadow */\n                --ci-button-bg: rgba(255, 255, 255, 0.1); /* Navigation button background */\n                --ci-button-hover-bg: rgba(255, 255, 255, 0.2); /* Navigation button hover background */\n                --ci-button-text: #fff; /* Navigation button text color */\n                --ci-progress-color: rgba(255, 255, 255, 0.6); /* Progress text color */\n                --ci-welcome-button-bg-rgb: var(--ci-aura-rgb); /* Welcome button background color */\n                --ci-welcome-button-text: #000; /* Welcome button text color */\n            }\n\n            /* --- LIGHT THEME --- */\n            .coding-intro-v7-container[data-theme="light"] {\n                --ci-aura-rgb: 0, 122, 255;\n                --ci-tooltip-bg: #ffffff;\n                --ci-tooltip-title: #000000;\n                --ci-tooltip-content: rgba(0, 0, 0, 0.85);\n                --ci-tooltip-border: rgba(0, 0, 0, 0.15);\n                --ci-tooltip-shadow: rgba(60, 60, 60, 0.2);\n                --ci-button-bg: rgba(0, 0, 0, 0.08);\n                --ci-button-hover-bg: rgba(0, 0, 0, 0.15);\n                --ci-button-text: #000;\n                --ci-progress-color: rgba(0, 0, 0, 0.5);\n                --ci-welcome-button-text: #fff;\n            }\n\n            body.coding-intro-v7-active { overflow: hidden; }\n\n            .coding-intro-v7-container {\n                position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n                z-index: 99998;\n                pointer-events: none;\n                opacity: 0; \n                transition: opacity var(--ci-anim-speed) ease-in-out;\n            }\n            .coding-intro-v7-container.visible { opacity: 1; }\n\n            .coding-intro-v7-overlay {\n                position: absolute; top: 0; left: 0; width: 100%; height: 100%;\n                background-color: ${e.backdropColor};\n                pointer-events: all;\n                opacity: 0;\n                transition: opacity var(--ci-anim-speed) var(--ci-anim-ease);\n            }\n            .coding-intro-v7-overlay.visible { opacity: 1; }\n\n            .coding-intro-v7-highlighter {\n                position: absolute; pointer-events: none;\n                border-radius: 8px; \n                box-shadow: 0 0 0 3px rgba(var(--ci-aura-rgb), 0.7), 0 0 0 9999px ${e.backdropColor}; \n                transition: all var(--ci-anim-speed) var(--ci-anim-ease);\n                opacity: 0;\n            }\n            .coding-intro-v7-highlighter.visible { opacity: 1; }\n\n            .coding-intro-v7-tooltip {\n                position: absolute;\n                z-index: 1;\n                border-radius: 12px; \n                padding: clamp(0.8rem, 3vw, 1.2rem); \n                max-width: min(380px, calc(100vw - (var(--ci-safe-area) * 2)));\n                width: 100%;\n                pointer-events: all;\n                opacity: 0;\n                transform: none; \n                transition: all var(--ci-anim-speed) var(--ci-anim-ease);\n                border: 1px solid var(--ci-tooltip-border);\n                box-shadow: 0 5px 15px var(--ci-tooltip-shadow); \n                background-color: var(--ci-tooltip-bg);\n                color: var(--ci-tooltip-content); \n                font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n            }\n            \n            .coding-intro-v7-tooltip.visible {\n                opacity: 1;\n                transform: none; \n            }\n\n            .coding-intro-v7-tooltip.is-welcome {\n                top: 50%; left: 50%;\n                width: calc(100% - (var(--ci-safe-area) * 2)); \n                transform: translate(-50%, -50%); \n                max-width: 450px; text-align: center;\n                padding: clamp(1rem, 4vw, 2rem); \n            }\n            .coding-intro-v7-tooltip.is-welcome.visible { transform: translate(-50%, -50%); } \n            \n            .ci-welcome-image { max-width: 100px; height: auto; margin: 0 auto 1rem; border-radius: 8px; } \n            .ci-welcome-button {\n                display: inline-flex; align-items: center; justify-content: center;\n                gap: 0.5em;\n                padding: 12px 28px; margin-top: 1rem; \n                background-color: rgba(var(--ci-welcome-button-bg-rgb), 0.9);\n                color: var(--ci-welcome-button-text);\n                border: none; border-radius: 40px; font-weight: 600; cursor: pointer;\n                font-size: 1rem;\n                transition: all 0.15s ease; \n            }\n            .ci-welcome-button:hover { transform: translateY(-2px); box-shadow: 0 2px 10px rgba(var(--ci-welcome-button-bg-rgb), 0.3); }\n\n            /* Tooltip Internals */\n            .ci-tooltip-header {\n                font-size: clamp(1.1rem, 4vw, 1.3rem); \n                font-weight: 600; color: var(--ci-tooltip-title); margin-bottom: 0.6rem;\n            }\n            .ci-tooltip-content {\n                font-size: clamp(0.85rem, 3.5vw, 0.95rem); \n                line-height: 1.5; margin-bottom: 1rem;\n            }\n            .ci-tooltip-footer { \n                display: flex; justify-content: space-between; align-items: center; \n                padding-top: 0.8rem;\n                border-top: 1px solid var(--ci-tooltip-border);\n                margin-top: 1rem;\n            }\n            .ci-progress { font-size: 0.85rem; color: var(--ci-progress-color); }\n            .ci-nav-buttons { display: flex; gap: 0.4rem; }\n            .ci-button {\n                min-width: 40px; \n                height: 38px; \n                border-radius: 6px;\n                border: none; \n                background: var(--ci-button-bg);\n                color: var(--ci-button-text);\n                cursor: pointer; \n                transition: all 0.15s ease; \n                display: inline-flex; \n                align-items: center; \n                justify-content: center;\n                padding: 0 14px; \n                font-size: 0.9rem;\n                font-weight: 500;\n                gap: 0.4em; \n                white-space: nowrap; \n            }\n            .ci-button span { /* For emoji */\n                font-size: 1.1em; \n                line-height: 1;\n            }\n            .ci-button:hover:not(:disabled) { background: var(--ci-button-hover-bg); transform: translateY(-1px); box-shadow: 0 1px 5px rgba(0,0,0,0.1); } \n            .ci-button:disabled { opacity: 0.5; cursor: not-allowed; transform: none; box-shadow: none; }\n        `,document.head.appendChild(t)}setupEventListeners(){let t,e;this.eventHandlers.resize=()=>{clearTimeout(t),t=setTimeout(()=>{this.isActive&&(this.measureTooltipDimensions(),this.updatePositions())},100)},window.addEventListener("resize",this.eventHandlers.resize),this.eventHandlers.scroll=()=>{clearTimeout(e),e=setTimeout(()=>{this.isActive&&!this.steps[this.currentStep]?.isWelcome&&this.updatePositions()},50)},window.addEventListener("scroll",this.eventHandlers.scroll,!0),this.options.keyboardNavigation&&(this.eventHandlers.keydown=t=>{!this.isActive||t.target.isContentEditable||["INPUT","TEXTAREA","SELECT"].includes(t.target.tagName)||("ArrowRight"!==t.key&&"Enter"!==t.key||(t.preventDefault(),this.next()),"ArrowLeft"===t.key&&(t.preventDefault(),this.prev()),"Escape"===t.key&&this.options.allowClose&&(t.preventDefault(),this.exit()))},document.addEventListener("keydown",this.eventHandlers.keydown)),this.elements.tooltip.addEventListener("click",t=>{const e=t.target.closest("button");e&&(e.classList.contains("ci-next")&&this.next(),e.classList.contains("ci-prev")&&this.prev())})}async processStep(t){if(!this.isActive||t<0||t>=this.steps.length)return this.finish();const e=this.steps[t];if("function"==typeof this.options.onBeforeStep&&await this.options.onBeforeStep(t,e),this.elements.tooltip.classList.remove("visible"),this.elements.highlighter.classList.remove("visible"),await new Promise(t=>setTimeout(t,this.options.animationSpeed/5)),this.previousStepClassName&&this.elements.tooltip.classList.remove(this.previousStepClassName),this.currentStep=t,e.isWelcome)await this.showWelcomeStep(e);else{const i=document.querySelector(e.selector);if(!i||"function"==typeof e.condition&&!e.condition(i))return console.warn(`%c[‚ö†Ô∏è CodingIntroJS]%c Step ${t} skipped ‚Äî target %c"${e.selector}"%c is a ghost üëª (missing or condition not met).`,"color: #e91e63; font-weight: bold;","color: #fff;","color: #ffeb3b; font-weight: bold;","color: #fff;"),this.processStep(t+1);await this.showSelectorStep(e,i)}"function"==typeof this.options.onAfterStep&&this.options.onAfterStep(this.currentStep,e,this.originalElement)}async showWelcomeStep(t){this.originalElement=null,this.elements.overlay.classList.add("visible");const e=t.title||this.options.labels.welcomeTitle,i=t.content||this.options.labels.welcomeContent,n=t.welcomeButtonText||this.options.labels.welcomeButton,o=t.welcomeButtonIcon||this.options.icons.next;this.elements.tooltip.innerHTML=`\n            ${t.welcomeImage?`<img src="${t.welcomeImage}" class="ci-welcome-image" alt="Welcome">`:""}\n            <div class="ci-tooltip-header">${e}</div>\n            <div class="ci-tooltip-content">${i}</div>\n            <button class="ci-welcome-button ci-next">\n                ${o?`<span>${o}</span>`:""}\n                ${n}\n            </button>\n        `,this.elements.tooltip.classList.add("is-welcome"),t.className&&this.elements.tooltip.classList.add(t.className),this.previousStepClassName=t.className||"",this.elements.tooltip.classList.add("visible")}async showSelectorStep(t,e){this.originalElement=e,this.originalElement.scrollIntoView({behavior:"smooth",block:"center",inline:"nearest"}),await new Promise(t=>{let e=window.scrollY,i=0;const n=()=>{if(!this.isActive)return void t();const o=window.scrollY;Math.abs(o-e)<2?i++:i=0,e=o,i>3?t():requestAnimationFrame(n)};requestAnimationFrame(n)}),this.elements.overlay.classList.remove("visible"),this.updateTooltipContent(t),t.className&&this.elements.tooltip.classList.add(t.className),this.previousStepClassName=t.className||"",this.updatePositions(),this.elements.tooltip.classList.add("visible")}getRectForSelector(t){const e=document.querySelector(t);return e?e.getBoundingClientRect():null}updatePositions(){if(!this.originalElement||this.steps[this.currentStep]?.isWelcome)return void this.elements.highlighter.classList.remove("visible");const t=this.getRectForSelector(this.steps[this.currentStep].selector);if(!t)return void this.elements.highlighter.classList.remove("visible");const e=this.elements.highlighter,i=this.options.highlightPadding;e.style.top=t.top-i+"px",e.style.left=t.left-i+"px",e.style.width=`${t.width+2*i}px`,e.style.height=`${t.height+2*i}px`;const n=this.steps[this.currentStep].highlightBorderRadius??window.getComputedStyle(this.originalElement).borderRadius;e.style.borderRadius=`calc(${n} + ${i}px)`,e.classList.add("visible"),this.positionTooltip(t)}updateTooltipContent(t){const e="function"==typeof t.title?t.title(this.originalElement):t.title,i="function"==typeof t.content?t.content(this.originalElement):t.content,n=this.currentStep===this.steps.length-1,o=0===this.currentStep,s=this.options.labels.prev,l=n?this.options.labels.finish:this.options.labels.next,r=this.options.icons.prev,a=n?this.options.icons.finish:this.options.icons.next;this.elements.tooltip.innerHTML=`\n            ${e?`<div class="ci-tooltip-header">${e}</div>`:""}\n            <div class="ci-tooltip-content">${i||""}</div>\n            <div class="ci-tooltip-footer">\n                <div class="ci-progress">${this.currentStep+1} ${this.options.labels.of} ${this.steps.length}</div>\n                <div class="ci-nav-buttons">\n                    <button class="ci-button ci-prev" title="${s}" ${o?"disabled":""}>\n                        ${r?`<span>${r}</span>`:""}\n                        ${s}\n                    </button>\n                    <button class="ci-button ci-next" title="${l}">\n                        ${a?`<span>${a}</span>`:""}\n                        ${l}\n                    </button>\n                </div>\n            </div>`,this.elements.tooltip.classList.remove("is-welcome")}positionTooltip(t){const e=this.elements.tooltip,i=this.tooltipDimensions.width,n=this.tooltipDimensions.height,o=this.options.safeAreaPadding,s=window.innerWidth,l=window.innerHeight,r=12,a=[{name:"bottom",top:t.bottom+r,left:t.left+t.width/2-i/2,score:l-(t.bottom+r+n)},{name:"top",top:t.top-n-r,left:t.left+t.width/2-i/2,score:t.top-n-r},{name:"right",top:t.top+t.height/2-n/2,left:t.right+r,score:s-(t.right+r+i)},{name:"left",top:t.top+t.height/2-n/2,left:t.left-i-r,score:t.left-i-r}];let c=null,p=-1/0;for(const e of a){const r={top:e.top,left:e.left,right:e.left+i,bottom:e.top+n},a=!(r.right<t.left||r.left>t.right||r.bottom<t.top||r.top>t.bottom),h=e.left>=o&&e.left+i<=s-o,d=e.top>=o&&e.top+n<=l-o;if(h&&d&&!a){const t=e.score;t>p&&(p=t,c=e)}}if(!c){let t=-1/0,e=null;for(const i of a){const n=i.score;n>t&&(t=n,e=i)}c=e||a[0]}let{top:h,left:d}=c;d=Math.max(o,Math.min(d,s-i-o)),h=Math.max(o,Math.min(h,l-n-o)),e.style.top=`${h}px`,e.style.left=`${d}px`}next(){this.goTo(this.currentStep+1)}prev(){this.goTo(this.currentStep-1)}exit(){this.isActive&&(this.isActive=!1,this.elements.container.classList.remove("visible"),document.body.classList.remove("coding-intro-v7-active"),setTimeout(()=>{this.elements.container&&this.elements.container.remove();const t=document.getElementById("coding-intro-styles-v7");t&&t.remove(),window.removeEventListener("resize",this.eventHandlers.resize),window.removeEventListener("scroll",this.eventHandlers.scroll,!0),this.eventHandlers.keydown&&document.removeEventListener("keydown",this.eventHandlers.keydown)},this.options.animationSpeed),"function"==typeof this.options.onExit&&this.options.onExit())}finish(){this.isActive&&("function"==typeof this.options.onFinish&&this.options.onFinish(),this.exit())}}window.CodingIntroJS=CodingIntroJS;